version: "3.9"

services:
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    env_file: .env
    environment:
      API_PORT: ${API_PORT:-8000}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://guesssenpai:guesssenpai@postgres:5432/guesssenpai}
      ALEMBIC_INI_PATH: ${ALEMBIC_INI_PATH:-alembic.ini}
      ALEMBIC_MIGRATIONS_PATH: ${ALEMBIC_MIGRATIONS_PATH:-alembic}
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8000/health/live"]
      interval: 10s
      timeout: 3s
      retries: 5

  web:
    build:
      context: .                       # repo root (so the Dockerfile can see pnpm-lock + workspace)
      dockerfile: apps/web/Dockerfile
    env_file: .env
    environment:
      API_BASE_URL: ${API_BASE_URL:-http://api:8000}
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE: ${NEXT_PUBLIC_API_BASE:-http://localhost:8000}
    ports:
      - "3000:3000"
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000"]
      interval: 15s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-guesssenpai}
      POSTGRES_USER: ${POSTGRES_USER:-guesssenpai}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-guesssenpai}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  redis-data:
  postgres-data:
